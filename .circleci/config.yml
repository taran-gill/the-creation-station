version: 2

aliases:
  - &docker_python
    - image: circleci/python:3.7.5-stretch

  - &restore_cache_python
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}
        - v1-dependencies-

  - &setup_system
    run:
      name: 'System Setup'
      command: |
        sudo apt-get -y -qq install ffmpeg

  - &setup_python
    run:
      name: 'Setup'
      command: |
        mkdir reports
        python3 -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

  - &save_cache_python
    save_cache:
      paths:
        - ./venv
      key: v1-dependencies-{{ checksum "requirements.txt" }}

  - &attach_workspace
    at: ~/project/reports

  - &store_artifacts
    path: ~/project/reports

jobs:
  setup_python:
    working_directory: ~/project
    docker: *docker_python
    steps:
      - checkout
      - *restore_cache_python
      - *setup_system
      - *setup_python
      - *save_cache_python
      - persist_to_workspace:
          root: ~/project
          paths:
            - reports
    
  test_python:
    working_directory: ~/project
    docker: *docker_python
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - *restore_cache_python
      - *setup_system
      - run:
          name: 'Test'
          command: |
            . venv/bin/activate
            python -m pytest -v --junitxml reports/junit.xml src/
      - persist_to_workspace:
          root: ~/project/reports
          paths:
            - junit.xml
      - store_artifacts: *store_artifacts

  lint_python:
    working_directory: ~/project
    docker: *docker_python
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - *restore_cache_python
      - run:
          name: 'Lint'
          command: |
            . venv/bin/activate
            flake8 ./src/ --max-line-length=160 --output-file reports/lint.txt
      - persist_to_workspace:
          root: ~/project/reports
          paths:
            - lint.txt
      - store_artifacts: *store_artifacts

  process_artifacts_python:
    working_directory: ~/project
    docker: *docker_python
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - *restore_cache_python
      - store_test_results:
          path: reports
      - store_artifacts: *store_artifacts

workflows:
  version: 2
  stable:
    jobs:
      - setup_python
      - test_python:
          requires:
            - setup_python
      - lint_python:
          requires:
            - setup_python
      - process_artifacts_python:
          requires:
            - test_python
            - lint_python
